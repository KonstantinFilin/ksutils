<?php

    namespace KsUtils;
    require_once realpath(dirname(__FILE__) . "/../../../src/KsUtils") . "/Dt.php";

    /**
     * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-05 at 15:14:58.
     */
    class DtTest extends \PHPUnit_Framework_TestCase
    {

        /**
         * @var Dt
         */
        protected $object;

        /**
         * Sets up the fixture, for example, opens a network connection.
         * This method is called before a test is executed.
         */
        protected function setUp()
        {
            $this->object = new Dt;
        }

        /**
         * Tears down the fixture, for example, closes a network connection.
         * This method is called after a test is executed.
         */
        protected function tearDown()
        {

        }

        /**
         * @covers KsUtils\Dt::convert
         */
        public function testConvert()
        {
            $this->assertNull(\KsUtils\Dt::convert("", "a", "b"));
            $this->assertNull(\KsUtils\Dt::convert("abc", "a", "b"));
            
            $this->assertEquals(
                "2013-12-31",
                \KsUtils\Dt::convert("31.12.2013", "d.m.Y", "Y-m-d")
            );

            $this->assertEquals(
                "2013-12-31 00:00:00",
                \KsUtils\Dt::convert("31.12.2013 00:00:00", "d.m.Y H:i:s", "Y-m-d H:i:s")
            );
        }

        /**
         * @covers KsUtils\Dt::rus2int
         */
        public function testRus2int()
        {
            $this->assertEquals(
                "2013-12-31",
                \KsUtils\Dt::rus2int("31.12.2013")
            );
        }

        /**
         * @covers KsUtils\Dt::int2rus
         */
        public function testInt2rus()
        {
            $this->assertEquals(
                "31.12.2013",
                \KsUtils\Dt::int2rus("2013-12-31")
            );
        }
        
        /**
         * @covers KsUtils\Dt::getNextDay
         */
        public function testGetNextDay()
        {
            $this->assertEquals(
                "",
                \KsUtils\Dt::getNextDay("qqqssc")
            );
            
            $this->assertEquals(
                "",
                \KsUtils\Dt::getNextDay("2011-03-16", "qqq")
            );

            $this->assertEquals(
                "17.03.2011",
                \KsUtils\Dt::getNextDay("16.03.2011", "d.m.Y")
            );
            
            $this->assertEquals(
                "2011-03-17",
                \KsUtils\Dt::getNextDay("2011-03-16")
            );

            $this->assertEquals(
                "2011-03-01",
                \KsUtils\Dt::getNextDay("2011-02-28")
            );
            
            $this->assertEquals(
                "2010-01-01",
                \KsUtils\Dt::getNextDay("2009-12-31")
            );
        }
        
        /**
         * @covers KsUtils\Dt::getPrevDay
         */
        public function testGetPrevDay()
        {
            
            $this->assertEquals(
                "",
                \KsUtils\Dt::getPrevDay("qqqssc")
            );
            
            $this->assertEquals(
                "",
                \KsUtils\Dt::getPrevDay("2011-03-16", "qqq")
            );

            $this->assertEquals(
                "16.03.2011",
                \KsUtils\Dt::getPrevDay("17.03.2011", "d.m.Y")
            );

            $this->assertEquals(
                "2011-03-16",
                \KsUtils\Dt::getPrevDay("2011-03-17")
            );
            
            $this->assertEquals(
                "2011-02-28",
                \KsUtils\Dt::getPrevDay("2011-03-01")
            );
            
            $this->assertEquals(
                "2009-12-31",
                \KsUtils\Dt::getPrevDay("2010-01-01")
            );
        }

    }

