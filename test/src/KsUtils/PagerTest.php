<?php

    namespace KsUtils;

    require_once realpath(dirname(__FILE__) . "/../../../src/KsUtils") . "/Pager.php";

    /**
     * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-05 at 15:14:58.
     */
    class PagerTest extends \PHPUnit_Framework_TestCase
    {

        /**
         * @var Pager
         */
        protected $object;

        /**
         * Sets up the fixture, for example, opens a network connection.
         * This method is called before a test is executed.
         */
        protected function setUp()
        {
            $this->object = new Pager;
        }

        /**
         * Tears down the fixture, for example, closes a network connection.
         * This method is called after a test is executed.
         */
        protected function tearDown()
        {

        }

        /**
         * @covers KsUtils\Pager::setDefaults
         */
        public function testDefaults()
        {
            $this->assertEquals(1, $this->object->getPagesTotal());
            $this->assertEquals(10, $this->object->getShowBy());
            $this->assertEquals(0, $this->object->getItemsTotal());
            $this->assertEquals(1, $this->object->getCurPage());
            $this->assertEquals(array(), $this->object->getItems());
        }
        
        /**
         * @covers KsUtils\Pager::getShowBy
         * @covers KsUtils\Pager::setShowBy
         * @covers KsUtils\Pager::setShowByMax
         */
        public function testGetShowBy()
        {
            $num1 = 10;
            $this->object->setShowBy($num1);
            $this->assertEquals($num1, $this->object->getShowBy());
            $num2 = 15;
            $this->object->setShowBy($num2);
            $this->assertEquals($num2, $this->object->getShowBy());
            $num3 = 1500;
            $this->object->setShowBy($num3);
            $this->assertNotEquals($num3, $this->object->getShowBy());
            $this->assertEquals(100, $this->object->getShowBy());
            $num4 = 50;
            $max = 30;
            $this->object->setShowBy($num4);
            $this->object->setShowByMax($max);
            $this->assertNotEquals($num3, $this->object->getShowBy());
            $this->assertEquals($max, $this->object->getShowBy());
        }

        /**
         * @covers KsUtils\Pager::getItemsTotal
         * @covers KsUtils\Pager::setItemsTotal
         */
        public function testGetItemsTotal()
        {
            $num1 = 300;
            $this->object->setItemsTotal($num1);
            $this->assertEquals($num1, $this->object->getItemsTotal());
            $num2 = 510;
            $this->object->setItemsTotal($num2);
            $this->assertEquals($num2, $this->object->getItemsTotal());
        }

        /**
         * @covers KsUtils\Pager::getItems
         * @covers KsUtils\Pager::setItems
         */
        public function testGetItems()
        {
            $items1 = array(
                array("var11" => "aa", "var12" => "bb"),
                array("var21" => "cc", "var12" => "dd"),
                array("var31" => "ee", "var13" => "ff")
            );

            $this->object->setItems($items1);
            $this->assertEquals($items1, $this->object->getItems());
            $items2 = array(
                array("var11a" => "aaa", "var12a" => "bbb"),
                array("var21a" => "ccc", "var12a" => "ddd"),
                array("var31a" => "eee", "var13a" => "fff")
            );

            $this->object->setItems($items2);
            $this->assertEquals($items2, $this->object->getItems());
        }

        /**
         * @covers KsUtils\Pager::getPagesTotal
         * @covers KsUtils\Pager::setPagesTotal
         */
        public function testGetPagesTotal()
        {
            $num1 = 12;
            $this->object->setPagesTotal($num1);
            $this->assertEquals($num1, $this->object->getPagesTotal());
            $num2 = 39;
            $this->object->setPagesTotal($num2);
            $this->assertEquals($num2, $this->object->getPagesTotal());
        }

        /**
         * @covers KsUtils\Pager::getCurPage
         * @covers KsUtils\Pager::setCurPage
         */
        public function testGetCurPage()
        {
            $num1 = 19;
            $this->object->setCurPage($num1);
            $this->object->setPagesTotal($num1 + 5);
            $this->assertEquals($num1, $this->object->getCurPage());
            $num2 = 5;
            $this->object->setCurPage($num2);
            $this->object->setPagesTotal($num2 + 2);
            $this->assertEquals($num2, $this->object->getCurPage());     
            $num3 = 4;
            $this->object->setCurPage($num3);
            $this->object->setPagesTotal($num3);
            $this->assertEquals($num3, $this->object->getCurPage());
            
            $num4 = 30;
            $max = 21;
            $this->object->setCurPage($num4);
            $this->object->setPagesTotal($max);
            $this->assertEquals($max, $this->object->getCurPage());
            $this->assertNotEquals($num4, $this->object->getCurPage());
        }
        
        public function testGetFrom()
        {
            $p1 = new Pager();
            $p1->setPagesTotal(5);
            $this->assertEquals(1, $p1->getFrom());
            
            $p2 = new Pager(3);
            $p2->setPagesTotal(10);
            $this->assertEquals(21, $p2->getFrom());
            
            $p3 = new Pager(7, 21);
            $p3->setPagesTotal(10);
            $this->assertEquals(127, $p3->getFrom());
            
            $p4 = new Pager(7, 21);
            $p4->setPagesTotal(5);
            $this->assertEquals(85, $p4->getFrom());
        }
    }

