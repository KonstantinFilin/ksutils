<?php

namespace KsUtils\Validator;

require_once realpath(dirname(__FILE__) . "/../../../src") . "/Validator.php";
require_once realpath(dirname(__FILE__) . "/../../../src") . "/Validator/Int.php";

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-05 at 15:14:58.
 */
class IntTest extends \PHPUnit_Framework_TestCase
{
    /**
     *
     * @var Int
     */
    protected $objectPos;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->objectPos = new Int;
    }

    /**
     * @covers KsUtils\Validator\Int::check()
     */
    public function testCheckDefault()
    {
        $this->assertTrue($this->objectPos->check(345));
        $this->assertTrue($this->objectPos->check("123"));
        $this->assertFalse($this->objectPos->check("abc"));
        $this->assertFalse($this->objectPos->check("abc123"));
        $this->assertFalse($this->objectPos->check("123abc"));
        $this->assertFalse($this->objectPos->check(-12));

        $this->assertEquals(
            "Must be a number between 1 and 1000000, checked value: -123",
            $this->objectPos->getError(-123)
        );
    }

    /**
     * @covers KsUtils\Validator\Int::check()
     */
    public function testCheckRange()
    {
        $intPos5to100 = new Int(5, 100);

        $this->assertFalse($intPos5to100->check(4));
        $this->assertTrue($intPos5to100->check(5));
        $this->assertTrue($intPos5to100->check(6));
        $this->assertTrue($intPos5to100->check(99));
        $this->assertTrue($intPos5to100->check(100));
        $this->assertFalse($intPos5to100->check(101));
    }

    /**
     * @covers KsUtils\Validator\Int::check()
     */
    public function testCheckNegative()
    {
        $intMin3to5 = new Int(-3, 5);

        $this->assertFalse($intMin3to5->check(-4));
        $this->assertFalse($intMin3to5->check("-cbf"));
        $this->assertTrue($intMin3to5->check(-3));
        $this->assertTrue($intMin3to5->check(0));
        $this->assertTrue($intMin3to5->check(4));
        $this->assertTrue($intMin3to5->check(5));
        $this->assertFalse($intMin3to5->check(6));
    }
}